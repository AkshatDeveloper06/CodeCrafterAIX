const TRANSLATIONS = {
    'en': {
        // Interface
        'title': 'CodeCrafter AIX',
        'btn_generate': 'Generate Java Code',
        'btn_download': 'Download .java',
        'theme_light': 'Light Theme',
        'theme_dark': 'Dark Theme',
        'theme_github': 'GitHub Theme',
        'theme_monokai': 'Monokai Theme',
        
        // Categories
        'cat_config': 'Configuration',
        'cat_props': 'Properties',
        'cat_methods': 'Methods',
        'cat_control': 'Control',
        'cat_lists': 'Lists',
        'cat_math': 'Math',
        'cat_text': 'Text',
        'cat_logic': 'Logic',
        'cat_dictionaries': 'Dictionaries',
        'cat_colors': 'Colors',
        'cat_variables': 'Variables',
        'cat_functions': 'Functions',


        // Botões da IDE
        'save_blocks': 'Save Blocks',
        'load_blocks': 'Load Blocks',
        'generate_code': 'Generate Java Code',
        'download_file': 'Download .java',
        
        // Categorias do Toolbox
        'category_config': 'Configuration',
        'category_imports': 'Imports',
        'category_props': 'Properties',
        'category_methods': 'Methods',
        'category_control': 'Control',
        'category_math': 'Math',
        'category_text': 'Text',
        'category_lists': 'Lists',
        'category_logic': 'Logic',
        'category_dictionaries': 'Dictionaries',
        'category_imported': 'Imported Classes',
        'category_object': 'Objects',
        'category_colors': 'Colors',
        'category_variables': 'Variables',
        'category_functions': 'Functions',
        
        // Blocos
        'block_return': 'return',
        'block_extension': 'Create Extension',
        'block_constructor': 'Constructor',
        'block_package': 'Package',
        'block_import': 'Import',
        'block_property': 'Property',
        'block_designer': 'Designer Property',
        'block_method': 'Method',
        'block_event': 'Event',
        'block_parameter': 'Parameter',
        
        // Common terms
        'type': 'type',
        'return': 'return',
        'name': 'name',
        'value': 'value',
        'parameter': 'parameter',
        'description': 'description',
        'implementation': 'implementation',
        'add_parameter': 'Add Parameter',
        'remove_parameter': 'Remove Parameter',
        // Control blocks
        'controls_if': 'if',
        'controls_for': 'for',
        'controls_while': 'while',
        'controls_try': 'try',
        'controls_catch': 'catch',
        'controls_finally': 'finally',
        'controls_return': 'return',
        'controls_do': 'do',
        'controls_else': 'else',
        
        // Math blocks
        'math_number': 'number',
        'math_operation': 'operation',
        'math_function': 'function',
        'math_random': 'random',
        'math_constant': 'constant',
        'math_add': 'add',
        'math_subtract': 'subtract',
        'math_multiply': 'multiply',
        'math_divide': 'divide',
        'math_modulo': 'modulo',
        'math_power': 'power',
        'math_abs': 'absolute',
        'math_sqrt': 'square root',
        'math_sin': 'sine',
        'math_cos': 'cosine',
        'math_tan': 'tangent',
        'math_round': 'round',
        'math_ceil': 'ceiling',
        'math_floor': 'floor',
        'math_random_int': 'random integer',
        'math_random_float': 'random decimal',
        'math_random_bool': 'random boolean',
        
        // Text blocks
        'text_string': 'text',
        'text_join': 'join',
        'text_length': 'length',
        'text_uppercase': 'to uppercase',
        'text_lowercase': 'to lowercase',
        'text_trim': 'trim',
        'text_charAt': 'character at',
        'text_indexOf': 'find in text',
        
        // List blocks
        'lists_create': 'create list',
        'lists_add': 'add',
        'lists_remove': 'remove',
        'lists_get': 'get',
        'lists_set': 'set',
        'lists_clear': 'clear',
        'lists_size': 'size',
        'lists_forEach': 'for each',
        
        // Constructor blocks
        'constructor_default': 'default constructor',
        'constructor_custom': 'custom constructor',
        'constructor_param': 'constructor parameter',
        'constructor_super': 'super call',
        
        // Import blocks
        'import_manual': 'manual import',
        'import_package': 'import package',
        'import_class': 'import class',
        
        // Object blocks
        'object_create': 'create object',
        'object_get_field': 'get field',
        'object_set_field': 'set field',
        'object_call_method': 'call method',
        'object_is_null': 'is null',
        'object_cast': 'cast to',
        'object_instance_of': 'is instance of',
        
        // File operations
        'file_save': 'Save Blocks',
        'file_load': 'Load Blocks',
        'file_success': 'Operation successful',
        'file_error': 'Error during operation',
        
        // Tooltips
        'tooltip_save': 'Save current blocks to file',
        'tooltip_load': 'Load blocks from file',
        'tooltip_import': 'Add custom import',
        'tooltip_object': 'Create new object instance',
        'tooltip_method': 'Call method from imported class',

        'logic_compare': 'compare',
        'logic_compare_title': 'comparisons',
        'logic_compare_item_title': 'comparison',
        'logic_operation_and': 'and',
        'logic_operation_or': 'or',
        'logic_negate': 'not',
        'logic_boolean_true': 'true',
        'logic_boolean_false': 'false',
        'logic_null': 'null',

        'logic_operation_title': 'Logical Operation',
        'logic_operation_item_title': 'Boolean Input',
        'logic_operation_empty': '(empty)',
        'logic_operation_and': 'AND',
        'logic_operation_or': 'OR'
    },
    'pt-br': {
        // Interface
        'title': 'CodeCrafter AIX',
        'btn_generate': 'Gerar Código Java',
        'btn_download': 'Baixar .java',
        'theme_light': 'Tema Claro',
        'theme_dark': 'Tema Escuro',
        'theme_github': 'Tema GitHub',
        'theme_monokai': 'Tema Monokai',
        
        // Categorias
        'cat_config': 'Configuração',
        'cat_props': 'Propriedades',
        'cat_methods': 'Métodos',
        'cat_control': 'Controle',
        'cat_lists': 'Listas',
        'cat_math': 'Matemática',
        'cat_text': 'Texto',
        'cat_logic': 'Lógica',
        'cat_dictionaries': 'Dicionários',
        'cat_colors': 'Cores',
        'cat_variables': 'Variáveis',
        'cat_functions': 'Funções',
        
        // Botões da IDE
        'save_blocks': 'Salvar Blocos',
        'load_blocks': 'Carregar Blocos',
        'generate_code': 'Gerar Código Java',
        'download_file': 'Baixar .java',
        
        // Categorias do Toolbox
        'category_config': 'Configuração',
        'category_imports': 'Importações',
        'category_props': 'Propriedades',
        'category_methods': 'Métodos',
        'category_control': 'Controle',
        'category_math': 'Matemática',
        'category_text': 'Texto',
        'category_lists': 'Listas',
        'category_logic': 'Lógica',
        'category_dictionaries': 'Dicionários',
        'category_imported': 'Classes Importadas',
        'category_object': 'Objetos',
        'category_colors': 'Cores',
        'category_variables': 'Variáveis',
        'category_functions': 'Funções',
        
        // Blocos
        'block_return': 'retornar',
        'block_extension': 'Criar Extensão',
        'block_constructor': 'Construtor',
        'block_package': 'Pacote',
        'block_import': 'Importar',
        'block_property': 'Propriedade',
        'block_designer': 'Propriedade Designer',
        'block_method': 'Método',
        'block_event': 'Evento',
        'block_parameter': 'Parâmetro',
        
        // Termos comuns
        'type': 'tipo',
        'return': 'retorno',
        'name': 'nome',
        'value': 'valor',
        'parameter': 'parâmetro',
        'description': 'descrição',
        'implementation': 'implementação',
        'add_parameter': 'Adicionar Parâmetro',
        'remove_parameter': 'Remover Parâmetro',
        // Blocos de controle
        'controls_if': 'se',
        'controls_for': 'para',
        'controls_while': 'enquanto',
        'controls_try': 'tentar',
        'controls_catch': 'capturar',
        'controls_finally': 'finalmente',
        'controls_return': 'retornar',
        'controls_do': 'faça',
        'controls_else': 'senão',
        
        // Blocos matemáticos
        'math_number': 'número',
        'math_operation': 'operação',
        'math_function': 'função',
        'math_random': 'aleatório',
        'math_constant': 'constante',
        'math_add': 'adicionar',
        'math_subtract': 'subtrair',
        'math_multiply': 'multiplicar',
        'math_divide': 'dividir',
        'math_modulo': 'módulo',
        'math_power': 'potência',
        'math_abs': 'absoluto',
        'math_sqrt': 'raiz quadrada',
        'math_sin': 'seno',
        'math_cos': 'cosseno',
        'math_tan': 'tangente',
        'math_round': 'arredondar',
        'math_ceil': 'teto',
        'math_floor': 'piso',
        'math_random_int': 'inteiro aleatório',
        'math_random_float': 'decimal aleatório',
        'math_random_bool': 'booleano aleatório',
        
        // Blocos de texto
        'text_string': 'texto',
        'text_join': 'juntar',
        'text_length': 'comprimento',
        'text_uppercase': 'maiúsculas',
        'text_lowercase': 'minúsculas',
        'text_trim': 'remover espaços',
        'text_charAt': 'caractere na posição',
        'text_indexOf': 'encontrar no texto',
        
        // Blocos de lista
        'lists_create': 'criar lista',
        'lists_add': 'adicionar',
        'lists_remove': 'remover',
        'lists_get': 'obter',
        'lists_set': 'definir',
        'lists_clear': 'limpar',
        'lists_size': 'tamanho',
        'lists_forEach': 'para cada',
        
        // Blocos do construtor
        'constructor_default': 'construtor padrão',
        'constructor_custom': 'construtor personalizado',
        'constructor_param': 'parâmetro do construtor',
        'constructor_super': 'chamada super',
        
        // Blocos de importação
        'import_manual': 'importação manual',
        'import_package': 'importar pacote',
        'import_class': 'importar classe',
        
        // Blocos de objeto
        'object_create': 'criar objeto',
        'object_get_field': 'obter campo',
        'object_set_field': 'definir campo',
        'object_call_method': 'chamar método',
        'object_is_null': 'é nulo',
        'object_cast': 'converter para',
        'object_instance_of': 'é instância de',
        
        // Operações de arquivo
        'file_save': 'Salvar Blocos',
        'file_load': 'Carregar Blocos',
        'file_success': 'Operação realizada com sucesso',
        'file_error': 'Erro durante a operação',
        
        // Dicas de ferramentas
        'tooltip_save': 'Salvar blocos atuais em arquivo',
        'tooltip_load': 'Carregar blocos de um arquivo',
        'tooltip_import': 'Adicionar importação personalizada',
        'tooltip_object': 'Criar nova instância de objeto',
        'tooltip_method': 'Chamar método de classe importada',

        'logic_compare': 'compara',
        'logic_compare_title': 'comparações',
        'logic_compare_item_title': 'comparação',
        'logic_operation_and': 'e',
        'logic_operation_or': 'ou',
        'logic_negate': 'não',
        'logic_boolean_true': 'verdadeiro',
        'logic_boolean_false': 'falso',
        'logic_null': 'nulo',

        'logic_operation_title': 'Operação Lógica',
        'logic_operation_item_title': 'Entrada Booleana',
        'logic_operation_empty': '(vazio)',
        'logic_operation_and': 'E',
        'logic_operation_or': 'OU'

    }
};
